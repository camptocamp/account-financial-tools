sudo: required

services: docker

git:
  # we don't want travis to pull them for the lint build,
  # so we pull them manually in the tests build
  submodules: false

env:
  matrix:
    - LINT_CHECK="1"
    - TESTS="1"
  global:
    - DOCKER_COMPOSE_VERSION="1.7.1"
    - TESTS="0" LINT_CHECK="0"
    - ADDONS_DIR=${TRAVIS_BUILD_DIR}/odoo/local-src
    - SONGS_DIR=${TRAVIS_BUILD_DIR}/odoo/songs
    - COMPOSE_PROJECT_NAME=meteotest
    - GENERATED_IMAGE=${COMPOSE_PROJECT_NAME}_odoo
    - DOCKER_HUB_REPO=camptocamp/${GENERATED_IMAGE}
    - RANCHER_MINION_SERVER=https://${COMPOSE_PROJECT_NAME}.odoo-test.camptocamp.ch
    # Put here the travis secure key generated by `travis encrypt` command for the rancher minion server
    - secure: "nCAE/45ZQFZ7NEPI6nMClGog9P5mBDEbFnFOL6u2/JlwwGeS1gMdE8RLMLSPcsuTYc55nFNVvjHdMnyggFSCujnHgLKvy6cKwd2uqDHBdauwz5lHnIg4+IJn8xnivPiRS/fUEnOgPCcPmmqxysTmMK0vDOcgM+JELM1skIuSq9aMbcs4zF3TPz9qSJsUqIWikTuzWFoIcp8uuZkv9Lp1Q1Z2tFTS4Dib3EF4L9HUl5yodVYHsOz0VUP6zjVNnud8Y0yYqB9r1YxELNbzlA29htIW+Yr3/4npJN5dkyLvPx8gPxwYF0f7r+fNW9tPdbT0iidv4lRzpRgSZNOKvBOG6uKw0CmnfmvToSX2GVe6C+WCCXSC2NC2yqmAIp5jJCGBY6P4ky+rinPZu7GBNZ1w1mv4wy90ZBH7x3yBMA3dsWy363zaHwTA9NRKeA2irg7qHkycklmfqPzcGhRJ8KJ1DCOPGbqarT2122eo6Lam12p79+uw8Z9PJHJCXisthpIgazGMBEtvUgg5N121Q+oJDimT3J6LfgGgXS0ZzRb82b6hqhZI6dQBqzRHHTjvn2iPcJtRU0zjdKSQkl3WE6RIOtnhZ5bclkrQ60/FEYLHEQY9pZ+8JwyUcTPPX6nzSlWCrsDcsMCoSP2+jot/bGThZyOgorNBXaa6Pj4UGzsEgh0="

before_install:
  - sudo apt-get update
  - sudo DEBIAN_FRONTEND=noninteractive apt-get install -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" docker-engine --yes --force-yes
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - git config --global user.name "TravisCI"
  - git config --global user.email "travis@camptocamp.com"
  - if [ "$LINT_CHECK" == "1" ] ; then pip install --user -q flake8 ; fi
  - if [ "$LINT_CHECK" == "0" ] ; then pip install --user -q gitpython requests ; fi

install:
  - if [ "$LINT_CHECK" == "0" ] ; then ./travis/git_submodule_update.py ; fi
    # we always specify '-f docker-compose.yml' so 'docker-compose.override.yml'
    # is not used and so the volumes are not shared with the host
  - if [ "$LINT_CHECK" == "0" ] ; then docker-compose -f docker-compose.yml build --pull ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml up -d db ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml ps ; fi

# We run the tests and scenario in the same build, so we can push the docker image
# after that we validated it has tests and scenario passing
script:
  - if [ "$LINT_CHECK" == "1" ] ; then flake8 ${ADDONS_DIR} ${SONGS_DIR} --exclude=__init__.py ; fi
  # run tests on an empty database, which is dropped afterwards
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e ODOO_CLOUD_PLATFORM_UNSAFE=1 odoo runtests ; fi
  # run the scenario
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e ODOO_CLOUD_PLATFORM_UNSAFE=1 -e MARABUNTA_MODE=demo -e MARABUNTA_ALLOW_SERIE=True odoo odoo --stop-after-init ; fi

after_success:
  - if [ "$TESTS" == "1" ] ; then ./travis/publish.sh ; fi
